---
- name: Create the microshift install file
  ansible.builtin.template:
    src: minimal_microshift.toml.j2
    dest: "{{ microshift_generate_iso_folder }}/minimal_microshift.toml"
    mode: '0644'
  register: blueprint_minimal_install_file

- name: Add the microshift install blueprint to image builder
  ansible.builtin.command:
    composer-cli blueprints push {{ microshift_generate_iso_folder }}/minimal_microshift.toml

- name: Compose image
  ansible.builtin.command: >
    composer-cli -j compose start-ostree
     --ref "rhel/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/edge"
     minimal-microshift edge-container
  register: composed_image

- name: Set build id
  ansible.builtin.set_fact:
    build_id: "{{ composed_image.stdout | from_json | json_query('[].body.build_id') | first }}"
  when: composed_image.changed

- name: Wait for image build to complete
  ansible.builtin.command:
    composer-cli -j compose status
  delay: 30
  retries: 200
  changed_when: false
  until:
    (image_build_status.stdout | from_json | json_query(query_finished)) == "FINISHED"
  register: image_build_status
  vars:
    query_running: "[].body.run[?id=='{{ build_id }}']|[0][0].queue_status"
    query_finished: "[].body.finished[?id=='{{ build_id }}']|[0][0].queue_status"
    query_failed: "[].body.failed[?id=='{{ build_id }}']|[0][0].queue_status"

- name: Set fact download image path
  set_fact:
    downloaded_edge_image_path: "{{ microshift_generate_iso_folder }}/{{ build_id }}-container.tar"  

- name: Download the image
  ansible.builtin.command:
    composer-cli compose image {{ build_id }} --filename {{ downloaded_edge_image_path }}

- name: Change permission of the image
  ansible.builtin.file:
    path: "{{ downloaded_edge_image_path }}"
    mode: a+r

- name: Load podman image
  containers.podman.podman_load:
    input: "{{ downloaded_edge_image_path }}"
  register: image_loaded

- name: Podman run image
  containers.podman.podman_container:
    name: minimal-microshift-server
    image: "{{ image_loaded.image.Id }}"
    ports:
      - "8085:8080"
...
